(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{460:function(t,a,s){"use strict";s.r(a);var r=s(54),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"命令行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行"}},[t._v("#")]),t._v(" 命令行")]),t._v(" "),s("blockquote",[s("p",[t._v("在通过pip安装Lyrebird之后，可以直接使用lyrebird命令行启动。")])]),t._v(" "),s("h2",{attrs:{id:"h-help"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#h-help"}},[t._v("#")]),t._v(" -h --help")]),t._v(" "),s("p",[t._v("查看帮助")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird -h\nusage: lyrebird "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-V"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--mock MOCK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--proxy PROXY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--data DATA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c CONFIG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--log LOG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--script SCRIPT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--plugin PLUGIN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("src,plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\npositional arguments:\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("src,plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\noptional arguments:\n  -h, --help            show this "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" message and "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n  -V, --version         show lyrebird version\n  -v                    Show verbose log\n  --mock MOCK           Set mock server port, default port is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4272")]),t._v("\n  --proxy PROXY         Set proxy server port, default port is "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9090")]),t._v("\n  --data DATA           Set data dir, default is "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./data/"')]),t._v("\n  -b, --no_browser      Start without "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" a browser\n  -c CONFIG, --config CONFIG\n                        Start with a config file. Default is\n                        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/.lyrebird/conf.json"')]),t._v("\n  --log LOG             Set output log "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path\n  --script SCRIPT       Set a checker script path\n  --plugin PLUGIN       Set a plugin project path\n")])])]),s("h2",{attrs:{id:"v-version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-version"}},[t._v("#")]),t._v(" -V --version")]),t._v(" "),s("p",[t._v("查看版本")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird -V\nLyrebird "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6")]),t._v(".0\n")])])]),s("h2",{attrs:{id:"v-vvv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-vvv"}},[t._v("#")]),t._v(" -v -vvv")]),t._v(" "),s("p",[t._v("显示详细日志")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lyrebird 将以静默模式启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lyrebird 将以简单日志模式启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird -v\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lyrebird 将以详细日志模式启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird -vv\n")])])]),s("h2",{attrs:{id:"mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mock"}},[t._v("#")]),t._v(" --mock")]),t._v(" "),s("p",[t._v("指定mock服务端口")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定mock服务端口,lyrebird将在9000端口开启mock服务端口。(默认端口是9090)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird --mock "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v("\n")])])]),s("h2",{attrs:{id:"proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" --proxy")]),t._v(" "),s("p",[t._v("指定代理服务端端口")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定代理服务的端口,lyrebird将在8080端口开启代理服务端口。(默认端口是4272)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird --proxy "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),s("h2",{attrs:{id:"data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" --data")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定mock数据根目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lyrebird --data ~/work/mockdata\n")])])]),s("h2",{attrs:{id:"b-no-browser"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-no-browser"}},[t._v("#")]),t._v(" -b --no_browser")]),t._v(" "),s("p",[t._v("启动时不打开浏览器")]),t._v(" "),s("h2",{attrs:{id:"c-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-config"}},[t._v("#")]),t._v(" -c --config")]),t._v(" "),s("p",[t._v("使用指定配置文件启动lyrebird")]),t._v(" "),s("h2",{attrs:{id:"log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" --log")]),t._v(" "),s("p",[t._v("指定输出日志文件的位置")]),t._v(" "),s("h2",{attrs:{id:"script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script"}},[t._v("#")]),t._v(" --script")]),t._v(" "),s("p",[t._v("从指定路径加载"),s("RouterLink",{attrs:{to:"/guide/checker.html"}},[t._v("自定义脚本")]),t._v("\n用于调试自定义脚本")],1),t._v(" "),s("h2",{attrs:{id:"plugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" --plugin")]),t._v(" "),s("p",[t._v("从源码启动自定义插件工程，用于插件开发和调试。")]),t._v(" "),s("h2",{attrs:{id:"gen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gen"}},[t._v("#")]),t._v(" gen")]),t._v(" "),s("p",[t._v("从模板生成一个自定义插件项目")]),t._v(" "),s("p",[t._v("安装好Lyrebird后，可通过Lyrebird命令行工具生成插件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 在指定路径创建插件工程\nlyrebird gen /your/workspace/path\n\n# 创建过程中会要求输入插件名（用作包名\\显示名称\\插件项目目录名）\n>Please input your project name:\n\n# 例如输入demo_project\n# 您将会在 /your/workspace/path/demo_project得到一个插件工程\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);