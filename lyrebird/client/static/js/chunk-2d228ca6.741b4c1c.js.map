{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/css/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/cssMode.js"],"names":["Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","timePassedSinceLastUsed","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","diff","lastModifiedOffset","i","e","startOffset","endOffset","substring","compare","p","left","slice","right","leftIdx","rightIdx","ret","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","d","resource","worker","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toDocumentHighlightKind","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","entries","toLocation","parse","DefinitionAdapter","provideDefinition","findDefinition","definition","ReferenceAdapter","provideReferences","findReferences","toWorkspaceEdit","resourceEdits","_a","RenameAdapter","provideRenameEdits","newName","doRename","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","toFoldingRangeKind","Comment","Imports","Region","setupMode","first","more","apply","concat","registerCompletionItemProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","__webpack_exports__"],"mappings":"uHAKA,ICIOA,EAwBAC,EA2BAC,EAwBAC,EA8BAC,EAyBAC,EA2BAC,EAmBAC,EAsCAC,EAwBAC,EAuBAC,EAyCAC,EA8BAC,EAwCAC,EAiBAC,EDzYPC,EAAA,KACAC,EAAA,WACA,SAAAA,EAAAC,GACA,IAAAC,EAAAC,KACAA,KAAAC,UAAAH,EACAE,KAAAE,QAAA,KACAF,KAAAG,mBAAAC,YAAA,WAA2D,OAAAL,EAAAM,gBAA+B,KAC1FL,KAAAM,cAAA,EACAN,KAAAO,sBAAAP,KAAAC,UAAAO,YAAA,WAA6E,OAAAT,EAAAU,gBAqD7E,OAnDAZ,EAAAa,UAAAD,YAAA,WACAT,KAAAE,UACAF,KAAAE,QAAAS,UACAX,KAAAE,QAAA,MAEAF,KAAAY,QAAA,MAEAf,EAAAa,UAAAC,QAAA,WACAE,cAAAb,KAAAG,oBACAH,KAAAO,sBAAAI,UACAX,KAAAS,eAEAZ,EAAAa,UAAAL,aAAA,WACA,GAAAL,KAAAE,QAAA,CAGA,IAAAY,EAAAC,KAAAC,MAAAhB,KAAAM,cACAQ,EAAAlB,GACAI,KAAAS,gBAGAZ,EAAAa,UAAAO,WAAA,WAeA,OAdAjB,KAAAM,cAAAS,KAAAC,MACAhB,KAAAY,UACAZ,KAAAE,QAAAgB,OAAAC,OAAAC,gBAAA,CAEAC,SAAA,4BACAC,MAAAtB,KAAAC,UAAAsB,WAEAC,WAAA,CACAC,iBAAAzB,KAAAC,UAAAyB,mBACAH,WAAAvB,KAAAC,UAAAsB,cAGAvB,KAAAY,QAAAZ,KAAAE,QAAAyB,YAEA3B,KAAAY,SAEAf,EAAAa,UAAAkB,yBAAA,WAGA,IAFA,IAKAhB,EALAb,EAAAC,KACA6B,EAAA,GACAC,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CD,EAAAC,GAAAC,UAAAD,GAGA,OAAA9B,KAAAiB,aAAAgB,KAAA,SAAAC,GACAtB,EAAAsB,IACSD,KAAA,SAAAE,GACT,OAAApC,EAAAG,QAAAkC,oBAAAP,KACSI,KAAA,SAAAE,GAAqB,OAAAvB,KAE9Bf,EA5DA,ICIA,SAAAhB,GAMA,SAAAwD,EAAAC,EAAAC,GACA,OAAgBD,OAAAC,aAMhB,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,cAAAF,IAAAC,EAAAE,OAAAH,EAAAJ,OAAAK,EAAAE,OAAAH,EAAAH,WANA1D,EAAAwD,SAQAxD,EAAA2D,MAjBA,CAkBC3D,MAAA,KAMD,SAAAC,GACA,SAAAuD,EAAAS,EAAAC,EAAAC,EAAAC,GACA,GAAAN,EAAAE,OAAAC,IAAAH,EAAAE,OAAAE,IAAAJ,EAAAE,OAAAG,IAAAL,EAAAE,OAAAI,GACA,OAAoBC,MAAArE,EAAAwD,OAAAS,EAAAC,GAAAI,IAAAtE,EAAAwD,OAAAW,EAAAC,IAEpB,GAAApE,EAAA2D,GAAAM,IAAAjE,EAAA2D,GAAAO,GACA,OAAoBG,MAAAJ,EAAAK,IAAAJ,GAGpB,UAAAK,MAAA,8CAAAN,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAOA,SAAAT,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,cAAAF,IAAA7D,EAAA2D,GAAAE,EAAAQ,QAAArE,EAAA2D,GAAAE,EAAAS,KANArE,EAAAuD,SAQAvD,EAAA0D,KApBA,CAqBC1D,MAAA,KAMD,SAAAC,GAMA,SAAAsD,EAAAgB,EAAAC,GACA,OAAgBD,MAAAC,SAMhB,SAAAd,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAA5D,EAAA0D,GAAAE,EAAAY,SAAAX,EAAAa,OAAAd,EAAAW,MAAAV,EAAAc,UAAAf,EAAAW,MANAtE,EAAAsD,SAQAtD,EAAAyD,KAjBA,CAkBCzD,MAAA,KAMD,SAAAC,GAIA,SAAAqD,EAAAqB,EAAAC,EAAAC,EAAAC,GACA,OACAH,MACAC,QACAC,OACAC,SAOA,SAAArB,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAE,OAAAH,EAAAgB,MACAf,EAAAE,OAAAH,EAAAiB,QACAhB,EAAAE,OAAAH,EAAAkB,OACAjB,EAAAE,OAAAH,EAAAmB,OATA7E,EAAAqD,SAWArD,EAAAwD,KAvBA,CAwBCxD,MAAA,KAMD,SAAAC,GAIA,SAAAoD,EAAAiB,EAAAQ,GACA,OACAR,QACAQ,SAOA,SAAAtB,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAA3D,EAAA0D,GAAAE,EAAAY,QAAAtE,EAAAwD,GAAAE,EAAAoB,OANA7E,EAAAoD,SAQApD,EAAAuD,KAlBA,CAmBCvD,MAAA,KAMD,SAAAC,GAIA,SAAAmD,EAAAf,EAAAyC,EAAAC,GACA,OACA1C,QACAyC,WACAC,uBAOA,SAAAxB,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAa,OAAAd,EAAApB,SACAqB,EAAAc,UAAAf,EAAAqB,WAAAtE,EAAA+C,GAAAE,MACAC,EAAAc,UAAAf,EAAAsB,sBAAArB,EAAAsB,WAAAvB,EAAAsB,oBAAAvE,EAAA+C,KARAtD,EAAAmD,SAUAnD,EAAAsD,KArBA,CAsBCtD,MAAA,KAKD,SAAAC,GAIAA,EAAA,qBAIAA,EAAA,qBAIAA,EAAA,mBAZA,CAaCA,MAAA,KAMD,SAAAC,GAIA,SAAAiD,EAAA6B,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,CACAL,YACAC,WAWA,OATAxB,EAAAY,QAAAa,KACAG,EAAAH,kBAEAzB,EAAAY,QAAAc,KACAE,EAAAF,gBAEA1B,EAAAY,QAAAe,KACAC,EAAAD,QAEAC,EAMA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAE,OAAAH,EAAAwB,YAAAvB,EAAAE,OAAAH,EAAAwB,aACAvB,EAAAc,UAAAf,EAAA0B,iBAAAzB,EAAAE,OAAAH,EAAA0B,mBACAzB,EAAAc,UAAAf,EAAA2B,eAAA1B,EAAAE,OAAAH,EAAA2B,iBACA1B,EAAAc,UAAAf,EAAA4B,OAAA3B,EAAAa,OAAAd,EAAA4B,OATAlF,EAAAiD,SAWAjD,EAAAoD,KA/BA,CAgCCpD,MAAA,KAMD,SAAAC,GAIA,SAAAgD,EAAAmC,EAAAC,GACA,OACAD,WACAC,WAOA,SAAAjC,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAA3D,EAAAyD,GAAAE,EAAA8B,WAAA7B,EAAAa,OAAAd,EAAA+B,SANApF,EAAAgD,SAQAhD,EAAAmD,KAlBA,CAmBCnD,MAAA,KAKD,SAAAC,GAIAA,EAAA8D,MAAA,EAIA9D,EAAAoF,QAAA,EAIApF,EAAAqF,YAAA,EAIArF,EAAAsF,KAAA,EAhBA,CAiBCtF,MAAA,KAMD,SAAAC,GAIA,SAAA8C,EAAAiB,EAAAmB,EAAAI,EAAAC,EAAAC,EAAAC,GACA,IAAAT,EAAA,CAAsBjB,QAAAmB,WAatB,OAZA9B,EAAAY,QAAAsB,KACAN,EAAAM,YAEAlC,EAAAY,QAAAuB,KACAP,EAAAO,QAEAnC,EAAAY,QAAAwB,KACAR,EAAAQ,UAEApC,EAAAY,QAAAyB,KACAT,EAAAS,sBAEAT,EAMA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IACA5D,EAAA0D,GAAAE,EAAAY,QACAX,EAAAa,OAAAd,EAAA+B,WACA9B,EAAAE,OAAAH,EAAAmC,WAAAlC,EAAAc,UAAAf,EAAAmC,aACAlC,EAAAE,OAAAH,EAAAoC,OAAAnC,EAAAa,OAAAd,EAAAoC,OAAAnC,EAAAc,UAAAf,EAAAoC,SACAnC,EAAAa,OAAAd,EAAAqC,SAAApC,EAAAc,UAAAf,EAAAqC,WACApC,EAAAc,UAAAf,EAAAsC,qBAAArC,EAAAsB,WAAAvB,EAAAsC,mBAAA3F,EAAAmD,KAZAjD,EAAA8C,SAcA9C,EAAAiD,KAlCA,CAmCCjD,MAAA,KAMD,SAAAC,GAIA,SAAA6C,EAAA4C,EAAAC,GAEA,IADA,IAAAC,EAAA,GACArD,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CqD,EAAArD,EAAA,GAAAC,UAAAD,GAEA,IAAAyC,EAAA,CAAsBU,QAAAC,WAItB,OAHAvC,EAAAY,QAAA4B,MAAAnD,OAAA,IACAuC,EAAAxC,UAAAoD,GAEAZ,EAMA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAAC,EAAAa,OAAAd,EAAAuC,QAAAtC,EAAAa,OAAAd,EAAAwC,SANA1F,EAAA6C,SAQA7C,EAAAgD,KAvBA,CAwBChD,MAAA,KAMD,SAAAC,GAMA,SAAA2F,EAAA9B,EAAA+B,GACA,OAAgB/B,QAAA+B,WAQhB,SAAAC,EAAAC,EAAAF,GACA,OAAgB/B,MAAA,CAASJ,MAAAqC,EAAApC,IAAAoC,GAAiCF,WAO1D,SAAAG,EAAAlC,GACA,OAAgBA,QAAA+B,QAAA,IAGhB,SAAA7C,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,cAAAF,IACAC,EAAAa,OAAAd,EAAA2C,UACAvG,EAAA0D,GAAAE,EAAAY,OAtBA7D,EAAA2F,UASA3F,EAAA6F,SAQA7F,EAAA+F,MAOA/F,EAAA+C,KAjCA,CAkCC/C,MAAA,KAMD,SAAAC,GAIA,SAAA2C,EAAAoD,EAAAC,GACA,OAAgBD,eAAAC,SAGhB,SAAAlD,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IACAiD,EAAAnD,GAAAE,EAAA+C,eACAG,MAAAC,QAAAnD,EAAAgD,OALAhG,EAAA2C,SAOA3C,EAAA8C,KAdA,CAeC9C,MAAA,KAED,SAAAC,GACA,SAAA6C,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAC,SACA,IAAAA,EAAAoD,cAAA,IAAApD,EAAAqD,wBACA,IAAArD,EAAAqD,iBAAApD,EAAAsB,WAAAvB,EAAAqD,gBAAArG,EAAA8C,KAEA7C,EAAA6C,KAPA,CAQC7C,MAAA,KACD,IA4GOqG,EAuBAL,EAwBAM,EA6BAC,EAqBAC,EAcAC,EAgCAC,EAsBAC,EAeAC,EAaAC,EAoBAC,EAiBAC,EAkBAC,EAwBAC,EAmBAC,EAkBAC,EA6BAC,EA9bPC,EAAA,WACA,SAAAA,EAAAtB,GACA1F,KAAA0F,QAoBA,OAlBAsB,EAAAtG,UAAA4E,OAAA,SAAAC,EAAAF,GACArF,KAAA0F,MAAAuB,KAAAxH,EAAA6F,OAAAC,EAAAF,KAEA2B,EAAAtG,UAAA0E,QAAA,SAAA9B,EAAA+B,GACArF,KAAA0F,MAAAuB,KAAAxH,EAAA2F,QAAA9B,EAAA+B,KAEA2B,EAAAtG,UAAAwG,OAAA,SAAA5D,GACAtD,KAAA0F,MAAAuB,KAAAxH,EAAA+F,IAAAlC,KAEA0D,EAAAtG,UAAAyG,IAAA,SAAAC,GACApH,KAAA0F,MAAAuB,KAAAG,IAEAJ,EAAAtG,UAAA2G,IAAA,WACA,OAAArH,KAAA0F,OAEAsB,EAAAtG,UAAA4G,MAAA,WACAtH,KAAA0F,MAAA6B,OAAA,EAAAvH,KAAA0F,MAAA1D,SAEAgF,EAtBA,IA2BA,WACA,SAAAQ,EAAAC,GACA,IAAA1H,EAAAC,KACAA,KAAA0H,iBAAAC,OAAAtF,OAAA,MACAoF,IACAzH,KAAA4H,eAAAH,EACAA,EAAA1B,gBACA0B,EAAA1B,gBAAA8B,QAAA,SAAAC,GACA,IAAAC,EAAA,IAAAf,EAAAc,EAAApC,OACA3F,EAAA2H,iBAAAI,EAAArC,aAAApC,KAAA0E,IAGAN,EAAA3B,SACA6B,OAAAK,KAAAP,EAAA3B,SAAA+B,QAAA,SAAAI,GACA,IAAAF,EAAA,IAAAf,EAAAS,EAAA3B,QAAAmC,IACAlI,EAAA2H,iBAAAO,GAAAF,KAKAJ,OAAAO,eAAAV,EAAA9G,UAAA,QAKAyH,IAAA,WACA,OAAAnI,KAAA4H,gBAEAQ,YAAA,EACAC,cAAA,IAEAb,EAAA9G,UAAA4H,kBAAA,SAAAL,GACA,GAAAtC,EAAAnD,GAAAyF,GAAA,CAMA,GALAjI,KAAA4H,iBACA5H,KAAA4H,eAAA,CACA7B,gBAAA,MAGA/F,KAAA4H,eAAA7B,gBACA,UAAA3C,MAAA,oEAEA,IAAAqC,EAAAwC,EACA1D,EAAAvE,KAAA0H,iBAAAjC,EAAApC,KACA,IAAAkB,EAAA,CACA,IAAAmB,EAAA,GACAoC,EAAA,CACArC,eACAC,SAEA1F,KAAA4H,eAAA7B,gBAAAkB,KAAAa,GACAvD,EAAA,IAAAyC,EAAAtB,GACA1F,KAAA0H,iBAAAjC,EAAApC,KAAAkB,EAEA,OAAAA,EAQA,GALAvE,KAAA4H,iBACA5H,KAAA4H,eAAA,CACA9B,QAAA6B,OAAAtF,OAAA,SAGArC,KAAA4H,eAAA9B,QACA,UAAA1C,MAAA,kEAEAmB,EAAAvE,KAAA0H,iBAAAO,GACA,IAAA1D,EAAA,CACAmB,EAAA,GACA1F,KAAA4H,eAAA9B,QAAAmC,GAAAvC,EACAnB,EAAA,IAAAyC,EAAAtB,GACA1F,KAAA0H,iBAAAO,GAAA1D,EAEA,OAAAA,IAvEA,IAkFA,SAAAyB,GAKA,SAAA3D,EAAAgB,GACA,OAAgBA,OAMhB,SAAAb,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAAC,EAAAa,OAAAd,EAAAW,KANA2C,EAAA3D,SAQA2D,EAAAxD,MAhBA,CAiBCwD,MAAA,KAMD,SAAAL,GAMA,SAAAtD,EAAAgB,EAAAkF,GACA,OAAgBlF,MAAAkF,WAMhB,SAAA/F,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAAC,EAAAa,OAAAd,EAAAW,MAAAV,EAAAE,OAAAH,EAAA6F,SANA5C,EAAAtD,SAQAsD,EAAAnD,KAjBA,CAkBCmD,MAAA,KAMD,SAAAM,GAQA,SAAA5D,EAAAgB,EAAA9B,EAAAgH,EAAAC,GACA,OAAgBnF,MAAA9B,aAAAgH,UAAAC,QAMhB,SAAAhG,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAAC,EAAAa,OAAAd,EAAAW,MAAAV,EAAAa,OAAAd,EAAAnB,aAAAoB,EAAAE,OAAAH,EAAA6F,UAAA5F,EAAAa,OAAAd,EAAA8F,MANAvC,EAAA5D,SAQA4D,EAAAzD,KAnBA,CAoBCyD,MAAA,KASD,SAAAC,GAIAA,EAAAuC,UAAA,YAIAvC,EAAAwC,SAAA,WARA,CASCxC,MAAA,KACD,SAAAA,GAIA,SAAA1D,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAC,IAAAwD,EAAAuC,WAAA/F,IAAAwD,EAAAwC,SAEAxC,EAAA1D,KARA,CASC0D,MAAA,KAED,SAAAC,GAIA,SAAA3D,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,cAAAH,IAAAyD,EAAA1D,GAAAE,EAAA4B,OAAA3B,EAAAa,OAAAd,EAAAD,OAEA0D,EAAA3D,KARA,CASC2D,MAAA,KAKD,SAAAC,GACAA,EAAAuC,KAAA,EACAvC,EAAAwC,OAAA,EACAxC,EAAAyC,SAAA,EACAzC,EAAA0C,YAAA,EACA1C,EAAA2C,MAAA,EACA3C,EAAA4C,SAAA,EACA5C,EAAA6C,MAAA,EACA7C,EAAA8C,UAAA,EACA9C,EAAA+C,OAAA,EACA/C,EAAAgD,SAAA,GACAhD,EAAAiD,KAAA,GACAjD,EAAAkD,MAAA,GACAlD,EAAAmD,KAAA,GACAnD,EAAAoD,QAAA,GACApD,EAAAqD,QAAA,GACArD,EAAApH,MAAA,GACAoH,EAAAsD,KAAA,GACAtD,EAAAuD,UAAA,GACAvD,EAAAwD,OAAA,GACAxD,EAAAyD,WAAA,GACAzD,EAAA0D,SAAA,GACA1D,EAAA2D,OAAA,GACA3D,EAAA4D,MAAA,GACA5D,EAAA6D,SAAA,GACA7D,EAAA8D,cAAA,GAzBA,CA0BC9D,MAAA,KAMD,SAAAC,GAIAA,EAAAoC,UAAA,EAWApC,EAAAoD,QAAA,EAfA,CAgBCpD,MAAA,KAMD,SAAAC,GAKA,SAAAjE,EAAAf,GACA,OAAgBA,SAEhBgF,EAAAjE,SARA,CASCiE,MAAA,KAMD,SAAAC,GAOA,SAAAlE,EAAA8H,EAAAC,GACA,OAAgBD,SAAA,GAAAC,kBAEhB7D,EAAAlE,SAVA,CAWCkE,MAAA,KAED,SAAAC,GAMA,SAAA6D,EAAAC,GACA,OAAAA,EAAAlF,QAAA,wBAA0C,QAM1C,SAAA5C,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAa,OAAAd,IAAAC,EAAAC,cAAAF,IAAAC,EAAAa,OAAAd,EAAA6H,WAAA5H,EAAAa,OAAAd,EAAAD,OANA+D,EAAA6D,gBAQA7D,EAAAhE,KAjBA,CAkBCgE,MAAA,KAED,SAAAC,GAIA,SAAAjE,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,cAAAF,KAAAyD,EAAA3D,GAAAE,EAAA8H,WACAhE,EAAAhE,GAAAE,EAAA8H,WACA7H,EAAAsB,WAAAvB,EAAA8H,SAAAhE,EAAAhE,YAAA,IAAAC,EAAAa,OAAAxE,EAAA0D,GAAAC,EAAAa,QAEAmD,EAAAjE,KAVA,CAWCiE,MAAA,KAMD,SAAAC,GAOA,SAAArE,EAAAf,EAAAmJ,GACA,OAAAA,EAAA,CAAgCnJ,QAAAmJ,iBAA6C,CAAInJ,SAEjFoF,EAAArE,SAVA,CAYCqE,MAAA,KAMD,SAAAC,GACA,SAAAtE,EAAAf,EAAAmJ,GAEA,IADA,IAAAC,EAAA,GACA5I,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C4I,EAAA5I,EAAA,GAAAC,UAAAD,GAEA,IAAAyC,EAAA,CAAsBjD,SAUtB,OATAqB,EAAAY,QAAAkH,KACAlG,EAAAkG,iBAEA9H,EAAAY,QAAAmH,GACAnG,EAAAmG,aAGAnG,EAAAmG,WAAA,GAEAnG,EAEAoC,EAAAtE,SAlBA,CAmBCsE,MAAA,KAKD,SAAAC,GAIAA,EAAA+B,KAAA,EAIA/B,EAAA+D,KAAA,EAIA/D,EAAAgE,MAAA,EAZA,CAaChE,MAAA,KAMD,SAAAC,GAKA,SAAAxE,EAAAiB,EAAAgB,GACA,IAAAC,EAAA,CAAsBjB,SAItB,OAHAX,EAAAE,OAAAyB,KACAC,EAAAD,QAEAC,EAEAsC,EAAAxE,SAZA,CAaCwE,MAAA,KAKD,SAAAC,GACAA,EAAA4C,KAAA,EACA5C,EAAAqC,OAAA,EACArC,EAAA+D,UAAA,EACA/D,EAAAgE,QAAA,EACAhE,EAAAmC,MAAA,EACAnC,EAAA8B,OAAA,EACA9B,EAAAsC,SAAA,EACAtC,EAAAiC,MAAA,EACAjC,EAAAgC,YAAA,EACAhC,EAAAyC,KAAA,GACAzC,EAAAoC,UAAA,GACApC,EAAA+B,SAAA,GACA/B,EAAAkC,SAAA,GACAlC,EAAAgD,SAAA,GACAhD,EAAAiE,OAAA,GACAjE,EAAAkE,OAAA,GACAlE,EAAAmE,QAAA,GACAnE,EAAAlB,MAAA,GACAkB,EAAAa,OAAA,GACAb,EAAAoE,IAAA,GACApE,EAAAqE,KAAA,GACArE,EAAA+C,WAAA,GACA/C,EAAAiD,OAAA,GACAjD,EAAAkD,MAAA,GACAlD,EAAAmD,SAAA,GACAnD,EAAAoD,cAAA,GA1BA,CA2BCpD,MAAA,KAED,SAAAC,GAUA,SAAA1E,EAAA+I,EAAA9G,EAAAhB,EAAAD,EAAAgI,GACA,IAAA9G,EAAA,CACA6G,OACA9G,OACAE,SAAA,CAAuBnB,MAAAC,UAKvB,OAHA+H,IACA9G,EAAA8G,iBAEA9G,EAEAwC,EAAA1E,SArBA,CAsBC0E,MAAA,KAOD,IA+COuE,EA6DAC,EAsBAC,EA+BAC,EAyBAC,EA1LPC,EAAA,WACA,SAAAA,KAEA,OAAAA,EAHA,IAMA,SAAAA,GAWA,SAAAtJ,EAAA+I,EAAAQ,EAAAtH,EAAAhB,EAAAuI,EAAAC,GACA,IAAAvH,EAAA,CACA6G,OACAQ,SACAtH,OACAhB,QACAuI,kBAKA,YAHA,IAAAC,IACAvH,EAAAuH,YAEAvH,EAMA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAC,GACAC,EAAAa,OAAAd,EAAA0I,OAAAzI,EAAAa,OAAAd,EAAAkJ,SAAAjJ,EAAAE,OAAAH,EAAA4B,OACAxF,EAAA0D,GAAAE,EAAAY,QAAAxE,EAAA0D,GAAAE,EAAAmJ,uBACA,IAAAnJ,EAAAqJ,YAAApJ,EAAAqJ,QAAAtJ,EAAAqJ,oBACA,IAAArJ,EAAAoJ,UAAAlG,MAAAC,QAAAnD,EAAAoJ,WAVAH,EAAAtJ,SAYAsJ,EAAAnJ,MApCA,CAqCCmJ,MAAA,KAKD,SAAAL,GAIAA,EAAAW,SAAA,WAIAX,EAAAY,SAAA,WAYAZ,EAAAa,gBAAA,mBAWAb,EAAAc,eAAA,kBAaAd,EAAAe,gBAAA,mBAMAf,EAAAgB,OAAA,SAIAhB,EAAAiB,sBAAA,yBAtDA,CAuDCjB,MAAA,KAMD,SAAAC,GAIA,SAAAlJ,EAAAmK,EAAAC,GACA,IAAAlI,EAAA,CAAsBiI,eAItB,YAHA,IAAAC,GAAA,OAAAA,IACAlI,EAAAkI,QAEAlI,EAMA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAAC,EAAAsB,WAAAvB,EAAA8J,YAAAjN,EAAAiD,WAAA,IAAAE,EAAA+J,MAAA9J,EAAAsB,WAAAvB,EAAA+J,KAAA9J,EAAAa,SANA+H,EAAAlJ,SAQAkJ,EAAA/I,KAnBA,CAoBC+I,MAAA,KAED,SAAAC,GACA,SAAAnJ,EAAA4C,EAAAyH,EAAApI,GACA,IAAAC,EAAA,CAAsBU,SAUtB,OATAzF,EAAAgD,GAAAkK,GACAnI,EAAAW,QAAAwH,EAGAnI,EAAA6C,KAAAsF,OAEA,IAAApI,IACAC,EAAAD,QAEAC,EAGA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAC,GAAAC,EAAAa,OAAAd,EAAAuC,cACA,IAAAvC,EAAA8J,aAAA7J,EAAAsB,WAAAvB,EAAA8J,YAAAjN,EAAAiD,YACA,IAAAE,EAAA4B,MAAA3B,EAAAa,OAAAd,EAAA4B,cACA,IAAA5B,EAAA0E,WAAA,IAAA1E,EAAAwC,gBACA,IAAAxC,EAAAwC,SAAA1F,EAAAgD,GAAAE,EAAAwC,iBACA,IAAAxC,EAAA0E,MAAAzH,EAAA6C,GAAAE,EAAA0E,OARAoE,EAAAnJ,SAUAmJ,EAAAhJ,KAxBA,CAyBCgJ,MAAA,KAMD,SAAAC,GAIA,SAAApJ,EAAAiB,EAAAqJ,GACA,IAAApI,EAAA,CAAsBjB,SAGtB,OAFAX,EAAAY,QAAAoJ,KACApI,EAAAoI,QACApI,EAMA,SAAA/B,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAA5D,EAAA0D,GAAAE,EAAAY,SAAAX,EAAAc,UAAAf,EAAAwC,UAAA1F,EAAAgD,GAAAE,EAAAwC,UANAuG,EAAApJ,SAQAoJ,EAAAjJ,KAlBA,CAmBCiJ,MAAA,KAMD,SAAAC,GAIA,SAAArJ,EAAAuK,EAAAC,GACA,OAAgBD,UAAAC,gBAMhB,SAAArK,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAAC,EAAAE,OAAAH,EAAAkK,UAAAjK,EAAAqJ,QAAAtJ,EAAAmK,cANAnB,EAAArJ,SAQAqJ,EAAAlJ,KAfA,CAgBCkJ,MAAA,KAKD,IAAAoB,EAAA,WACA,SAAAA,KAEA,OAAAA,EAHA,IAUA,SAAAA,GAIA,SAAAzK,EAAAiB,EAAAyJ,EAAAJ,GACA,OAAgBrJ,QAAAyJ,SAAAJ,QAMhB,SAAAnK,EAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAY,QAAAb,IAAA5D,EAAA0D,GAAAE,EAAAY,SAAAX,EAAAc,UAAAf,EAAAqK,SAAApK,EAAAa,OAAAd,EAAAqK,SANAD,EAAAzK,SAQAyK,EAAAtK,MAfA,CAgBCsK,MAAA,KACM,IACAE,EAkFAC,GAjFP,SAAAD,GAOA,SAAA3K,EAAAgB,EAAA9B,EAAAgH,EAAA2E,GACA,WAAAC,EAAA9J,EAAA9B,EAAAgH,EAAA2E,GAMA,SAAA1K,EAAAC,GACA,IAAAC,EAAAD,EACA,SAAAE,EAAAY,QAAAb,IAAAC,EAAAa,OAAAd,EAAAW,OAAAV,EAAAc,UAAAf,EAAAnB,aAAAoB,EAAAa,OAAAd,EAAAnB,cAAAoB,EAAAE,OAAAH,EAAA0K,YACAzK,EAAA0K,KAAA3K,EAAA4K,UAAA3K,EAAA0K,KAAA3K,EAAA6K,aAAA5K,EAAA0K,KAAA3K,EAAA8K,WAGA,SAAAC,EAAAC,EAAAhI,GAUA,IATA,IAAA8C,EAAAkF,EAAAJ,UACAK,EAAAC,EAAAlI,EAAA,SAAAmI,EAAAC,GACA,IAAAC,EAAAF,EAAAvK,MAAAJ,MAAAZ,KAAAwL,EAAAxK,MAAAJ,MAAAZ,KACA,WAAAyL,EACAF,EAAAvK,MAAAJ,MAAAX,UAAAuL,EAAAxK,MAAAJ,MAAAX,UAEAwL,IAEAC,EAAAxF,EAAAxG,OACAiM,EAAAN,EAAA3L,OAAA,EAA4CiM,GAAA,EAAQA,IAAA,CACpD,IAAAC,EAAAP,EAAAM,GACAE,EAAAT,EAAAF,SAAAU,EAAA5K,MAAAJ,OACAkL,EAAAV,EAAAF,SAAAU,EAAA5K,MAAAH,KACA,KAAAiL,GAAAJ,GAIA,UAAA5K,MAAA,mBAHAoF,IAAA6F,UAAA,EAAAF,GAAAD,EAAA7I,QAAAmD,EAAA6F,UAAAD,EAAA5F,EAAAxG,QAKAgM,EAAAG,EAEA,OAAA3F,EAGA,SAAAoF,EAAAjB,EAAA2B,GACA,GAAA3B,EAAA3K,QAAA,EAEA,OAAA2K,EAEA,IAAA4B,EAAA5B,EAAA3K,OAAA,IACAwM,EAAA7B,EAAA8B,MAAA,EAAAF,GACAG,EAAA/B,EAAA8B,MAAAF,GACAX,EAAAY,EAAAF,GACAV,EAAAc,EAAAJ,GACA,IAAAK,EAAA,EACAC,EAAA,EACAX,EAAA,EACA,MAAAU,EAAAH,EAAAxM,QAAA4M,EAAAF,EAAA1M,OAAA,CACA,IAAA6M,EAAAP,EAAAE,EAAAG,GAAAD,EAAAE,IAGAjC,EAAAsB,KAFAY,GAAA,EAEAL,EAAAG,KAIAD,EAAAE,KAGA,MAAAD,EAAAH,EAAAxM,OACA2K,EAAAsB,KAAAO,EAAAG,KAEA,MAAAC,EAAAF,EAAA1M,OACA2K,EAAAsB,KAAAS,EAAAE,KAEA,OAAAjC,EAjEAK,EAAA3K,SASA2K,EAAAxK,KAyBAwK,EAAAS,cA5CA,CA6ECT,MAAA,KAKD,SAAAC,GAKAA,EAAA6B,OAAA,EAIA7B,EAAA8B,WAAA,EAIA9B,EAAA+B,SAAA,EAbA,CAcC/B,MAAA,KACD,IA2GAtK,EA3GAwK,EAAA,WACA,SAAAA,EAAA9J,EAAA9B,EAAAgH,EAAA2E,GACAlN,KAAAiP,KAAA5L,EACArD,KAAAkP,YAAA3N,EACAvB,KAAAmP,SAAA5G,EACAvI,KAAAoP,SAAAlC,EACAlN,KAAAqP,aAAA,KAmGA,OAjGA1H,OAAAO,eAAAiF,EAAAzM,UAAA,OACAyH,IAAA,WACA,OAAAnI,KAAAiP,MAEA7G,YAAA,EACAC,cAAA,IAEAV,OAAAO,eAAAiF,EAAAzM,UAAA,cACAyH,IAAA,WACA,OAAAnI,KAAAkP,aAEA9G,YAAA,EACAC,cAAA,IAEAV,OAAAO,eAAAiF,EAAAzM,UAAA,WACAyH,IAAA,WACA,OAAAnI,KAAAmP,UAEA/G,YAAA,EACAC,cAAA,IAEA8E,EAAAzM,UAAA4M,QAAA,SAAAhK,GACA,GAAAA,EAAA,CACA,IAAAJ,EAAAlD,KAAAwN,SAAAlK,EAAAJ,OACAC,EAAAnD,KAAAwN,SAAAlK,EAAAH,KACA,OAAAnD,KAAAoP,SAAAf,UAAAnL,EAAAC,GAEA,OAAAnD,KAAAoP,UAEAjC,EAAAzM,UAAA4O,OAAA,SAAAC,EAAAhH,GACAvI,KAAAoP,SAAAG,EAAA/G,KACAxI,KAAAmP,SAAA5G,EACAvI,KAAAqP,aAAA,MAEAlC,EAAAzM,UAAA8O,eAAA,WACA,UAAAxP,KAAAqP,aAAA,CAIA,IAHA,IAAAI,EAAA,GACAjH,EAAAxI,KAAAoP,SACAM,GAAA,EACAzB,EAAA,EAA2BA,EAAAzF,EAAAxG,OAAiBiM,IAAA,CAC5CyB,IACAD,EAAAxI,KAAAgH,GACAyB,GAAA,GAEA,IAAAC,EAAAnH,EAAAoH,OAAA3B,GACAyB,EAAA,OAAAC,GAAA,OAAAA,EACA,OAAAA,GAAA1B,EAAA,EAAAzF,EAAAxG,QAAA,OAAAwG,EAAAoH,OAAA3B,EAAA,IACAA,IAGAyB,GAAAlH,EAAAxG,OAAA,GACAyN,EAAAxI,KAAAuB,EAAAxG,QAEAhC,KAAAqP,aAAAI,EAEA,OAAAzP,KAAAqP,cAEAlC,EAAAzM,UAAA6M,WAAA,SAAAsC,GACAA,EAAAC,KAAAC,IAAAD,KAAAE,IAAAH,EAAA7P,KAAAoP,SAAApN,QAAA,GACA,IAAAyN,EAAAzP,KAAAwP,iBACAS,EAAA,EAAAC,EAAAT,EAAAzN,OACA,OAAAkO,EACA,OAAArR,EAAAwD,OAAA,EAAAwN,GAEA,MAAAI,EAAAC,EAAA,CACA,IAAAC,EAAAL,KAAAM,OAAAH,EAAAC,GAAA,GACAT,EAAAU,GAAAN,EACAK,EAAAC,EAGAF,EAAAE,EAAA,EAKA,IAAA7N,EAAA2N,EAAA,EACA,OAAApR,EAAAwD,OAAAC,EAAAuN,EAAAJ,EAAAnN,KAEA6K,EAAAzM,UAAA8M,SAAA,SAAAjI,GACA,IAAAkK,EAAAzP,KAAAwP,iBACA,GAAAjK,EAAAjD,MAAAmN,EAAAzN,OACA,OAAAhC,KAAAoP,SAAApN,OAEA,GAAAuD,EAAAjD,KAAA,EACA,SAEA,IAAA+N,EAAAZ,EAAAlK,EAAAjD,MACAgO,EAAA/K,EAAAjD,KAAA,EAAAmN,EAAAzN,OAAAyN,EAAAlK,EAAAjD,KAAA,GAAAtC,KAAAoP,SAAApN,OACA,OAAA8N,KAAAC,IAAAD,KAAAE,IAAAK,EAAA9K,EAAAhD,UAAA+N,GAAAD,IAEA1I,OAAAO,eAAAiF,EAAAzM,UAAA,aACAyH,IAAA,WACA,OAAAnI,KAAAwP,iBAAAxN,QAEAoG,YAAA,EACAC,cAAA,IAEA8E,EAzGA,IA4GA,SAAAxK,GACA,IAAA4N,EAAA5I,OAAAjH,UAAA6P,SACA,SAAAhN,EAAAd,GACA,2BAAAA,EAGA,SAAAgB,EAAAhB,GACA,2BAAAA,EAGA,SAAAuJ,EAAAvJ,GACA,WAAAA,IAAA,IAAAA,EAGA,SAAAe,EAAAf,GACA,0BAAA8N,EAAAC,KAAA/N,GAGA,SAAAI,EAAAJ,GACA,0BAAA8N,EAAAC,KAAA/N,GAGA,SAAA4K,EAAA5K,GACA,4BAAA8N,EAAAC,KAAA/N,GAGA,SAAAG,EAAAH,GAIA,cAAAA,GAAA,kBAAAA,EAGA,SAAAwB,EAAAxB,EAAAgO,GACA,OAAA7K,MAAAC,QAAApD,MAAAiO,MAAAD,GA7BA9N,EAAAY,UAIAZ,EAAAc,YAIAd,EAAAqJ,UAIArJ,EAAAa,SAIAb,EAAAE,SAIAF,EAAA0K,OAOA1K,EAAAC,gBAIAD,EAAAsB,cApCA,CAqCCtB,MAAA,KC70CD,IAAAgO,EAAAzP,OAAAyP,IAEAC,EAAA,WACA,SAAAA,EAAA1B,EAAAhP,EAAAJ,GACA,IAAAC,EAAAC,KACAA,KAAAkP,cACAlP,KAAAE,UACAF,KAAA6Q,aAAA,GACA7Q,KAAA8Q,UAAAnJ,OAAAtF,OAAA,MACA,IAAA0O,EAAA,SAAAC,GACA,IAIAC,EAJAC,EAAAF,EAAAG,YACAD,IAAAnR,EAAAmP,cAIAnP,EAAA+Q,UAAAE,EAAA3N,IAAAkN,YAAAS,EAAAI,mBAAA,WACAC,aAAAJ,GACAA,EAAAK,WAAA,WAAiD,OAAAvR,EAAAwR,YAAAP,EAAA3N,IAAA6N,IAA+C,OAEhGnR,EAAAwR,YAAAP,EAAA3N,IAAA6N,KAEAM,EAAA,SAAAR,GACA9P,OAAAC,OAAAsQ,gBAAAT,EAAAjR,EAAAmP,YAAA,IACA,IAAAwC,EAAAV,EAAA3N,IAAAkN,WACAoB,EAAA5R,EAAA+Q,UAAAY,GACAC,IACAA,EAAAhR,iBACAZ,EAAA+Q,UAAAY,KAGA1R,KAAA6Q,aAAA5J,KAAA/F,OAAAC,OAAAyQ,iBAAAb,IACA/Q,KAAA6Q,aAAA5J,KAAA/F,OAAAC,OAAA0Q,mBAAAL,IACAxR,KAAA6Q,aAAA5J,KAAA/F,OAAAC,OAAA2Q,yBAAA,SAAAvC,GACAiC,EAAAjC,EAAAyB,OACAD,EAAAxB,EAAAyB,UAEAlR,EAAAU,YAAA,SAAA2B,GACAjB,OAAAC,OAAA4Q,YAAAlK,QAAA,SAAAmJ,GACAA,EAAAG,cAAApR,EAAAmP,cACAsC,EAAAR,GACAD,EAAAC,QAIAhR,KAAA6Q,aAAA5J,KAAA,CACAtG,QAAA,WACA,QAAAsH,KAAAlI,EAAA+Q,UACA/Q,EAAA+Q,UAAA7I,GAAAtH,aAIAO,OAAAC,OAAA4Q,YAAAlK,QAAAkJ,GAmBA,OAjBAH,EAAAlQ,UAAAC,QAAA,WACAX,KAAA6Q,aAAAhJ,QAAA,SAAAmK,GAAgD,OAAAA,KAAArR,YAChDX,KAAA6Q,aAAA,IAEAD,EAAAlQ,UAAA6Q,YAAA,SAAAU,EAAA1Q,GACAvB,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAAC,aAAAF,EAAA1B,cACStO,KAAA,SAAAuK,GACT,IAAA4F,EAAA5F,EAAA6F,IAAA,SAAAL,GAAwD,OAAAM,EAAAL,EAAAD,KACxDhB,EAAA9P,OAAAC,OAAAoR,SAAAN,GACAjB,EAAAG,cAAA5P,GACAL,OAAAC,OAAAsQ,gBAAAT,EAAAzP,EAAA6Q,KAESnQ,UAAAwB,EAAA,SAAA+O,GACTC,QAAAC,MAAAF,MAGA5B,EApEA,GAuEA,SAAA+B,EAAAC,GACA,OAAAA,GACA,KAAatT,EAAqB8D,MAAA,OAAAlC,OAAA2R,eAAAzP,MAClC,KAAa9D,EAAqBoF,QAAA,OAAAxD,OAAA2R,eAAAnO,QAClC,KAAapF,EAAqBqF,YAAA,OAAAzD,OAAA2R,eAAAC,KAClC,KAAaxT,EAAqBsF,KAAA,OAAA1D,OAAA2R,eAAAjO,KAClC,QACA,OAAA1D,OAAA2R,eAAAC,MAGA,SAAAR,EAAAL,EAAAc,GACA,IAAAjO,EAAA,kBAAAiO,EAAAjO,KAAAiG,OAAAgI,EAAAjO,MAAAiO,EAAAjO,KACA,OACAD,SAAA8N,EAAAI,EAAAlO,UACAmO,gBAAAD,EAAAzP,MAAAJ,MAAAZ,KAAA,EACA2Q,YAAAF,EAAAzP,MAAAJ,MAAAX,UAAA,EACA2Q,cAAAH,EAAAzP,MAAAH,IAAAb,KAAA,EACA6Q,UAAAJ,EAAAzP,MAAAH,IAAAZ,UAAA,EACAkC,QAAAsO,EAAAtO,QACAK,OACAC,OAAAgO,EAAAhO,QAIA,SAAAqO,EAAA7N,GACA,GAAAA,EAGA,OAAYhD,UAAAgD,EAAA8N,OAAA,EAAA/Q,KAAAiD,EAAA+N,WAAA,GAEZ,SAAAC,GAAAjQ,GACA,GAAAA,EAGA,OAAYJ,MAAA,CAASZ,KAAAgB,EAAA0P,gBAAA,EAAAzQ,UAAAe,EAAA2P,YAAA,GAAoE9P,IAAA,CAAQb,KAAAgB,EAAA4P,cAAA,EAAA3Q,UAAAe,EAAA6P,UAAA,IAEjG,SAAAK,GAAAlQ,GACA,GAAAA,EAGA,WAAApC,OAAApC,MAAAwE,EAAAJ,MAAAZ,KAAA,EAAAgB,EAAAJ,MAAAX,UAAA,EAAAe,EAAAH,IAAAb,KAAA,EAAAgB,EAAAH,IAAAZ,UAAA,GAEA,SAAAkR,GAAAnP,GACA,IAAAoP,EAAAxS,OAAAyS,UAAAvN,mBACA,OAAA9B,GACA,KAAa8B,EAAqBuC,KAAA,OAAA+K,EAAA/K,KAClC,KAAavC,EAAqBwC,OAAA,OAAA8K,EAAA9K,OAClC,KAAaxC,EAAqByC,SAAA,OAAA6K,EAAA7K,SAClC,KAAazC,EAAqB0C,YAAA,OAAA4K,EAAA5K,YAClC,KAAa1C,EAAqB2C,MAAA,OAAA2K,EAAA3K,MAClC,KAAa3C,EAAqB4C,SAAA,OAAA0K,EAAA1K,SAClC,KAAa5C,EAAqB6C,MAAA,OAAAyK,EAAAzK,MAClC,KAAa7C,EAAqB8C,UAAA,OAAAwK,EAAAxK,UAClC,KAAa9C,EAAqB+C,OAAA,OAAAuK,EAAAvK,OAClC,KAAa/C,EAAqBgD,SAAA,OAAAsK,EAAAtK,SAClC,KAAahD,EAAqBiD,KAAA,OAAAqK,EAAArK,KAClC,KAAajD,EAAqBkD,MAAA,OAAAoK,EAAApK,MAClC,KAAalD,EAAqBmD,KAAA,OAAAmK,EAAAnK,KAClC,KAAanD,EAAqBoD,QAAA,OAAAkK,EAAAlK,QAClC,KAAapD,EAAqBqD,QAAA,OAAAiK,EAAAjK,QAClC,KAAarD,EAAqBpH,MAAA,OAAA0U,EAAA1U,MAClC,KAAaoH,EAAqBsD,KAAA,OAAAgK,EAAAhK,KAClC,KAAatD,EAAqBuD,UAAA,OAAA+J,EAAA/J,UAElC,OAAA+J,EAAAtK,SAEA,SAAAwK,GAAA7P,GACA,GAAAA,EAGA,OACAT,MAAAkQ,GAAAzP,EAAAT,OACAkF,KAAAzE,EAAAsB,SAGA,IAAIwO,GAAiB,WACrB,SAAAC,EAAA5T,GACAF,KAAAE,UA8CA,OA5CAyH,OAAAO,eAAA4L,EAAApT,UAAA,qBACAyH,IAAA,WACA,iBAEAC,YAAA,EACAC,cAAA,IAEAyL,EAAApT,UAAAqT,uBAAA,SAAA/C,EAAAzL,EAAAyO,EAAAC,GACAjD,EAAAkD,qBAAA3O,GAAA,IACA0M,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAAiC,WAAAlC,EAAA1B,WAAA6C,EAAA7N,MACStD,KAAA,SAAAmS,GACT,GAAAA,EAAA,CAGA,IAAAjK,EAAAiK,EAAAjK,MAAAkI,IAAA,SAAAgC,GACA,IAAAC,EAAA,CACAhT,MAAA+S,EAAA/S,MACAiT,WAAAF,EAAAE,YAAAF,EAAA/S,MACAkT,SAAAH,EAAAG,SACAC,WAAAJ,EAAAI,WACAhK,cAAA4J,EAAA5J,cACAmB,OAAAyI,EAAAzI,OACAtH,KAAAmP,GAAAY,EAAA/P,OAYA,OAVA+P,EAAAtQ,WACAuQ,EAAAhR,MAAAkQ,GAAAa,EAAAtQ,SAAAT,OACAgR,EAAAC,WAAAF,EAAAtQ,SAAAsB,SAEAgP,EAAArQ,sBACAsQ,EAAAtQ,oBAAAqQ,EAAArQ,oBAAAqO,IAAAuB,KAEAS,EAAAK,mBAA+CrO,EAAmBoD,UAClE6K,EAAAK,gBAAAzT,OAAAyS,UAAAiB,6BAAAC,iBAEAP,IAEA,OACAlK,aAAAgK,EAAAhK,aACA0K,YAAA3K,OAIA2J,EAhDqB,GAmDrB,SAAAiB,GAAAC,GACA,OAAAA,GAAA,kBAAAA,GAAA,kBAAAA,EAAA1Q,KAEA,SAAA2Q,GAAAZ,GACA,wBAAAA,EACA,CACA5R,MAAA4R,GAGAU,GAAAV,GACA,cAAAA,EAAA/P,KACA,CACA7B,MAAA4R,EAAA5R,MAAA2C,QAAA,wBAAoD,SAGpD,CACA3C,MAAA4R,EAAA5R,OAGA,CAAYA,MAAA,MAAA4R,EAAA9J,SAAA,KAAA8J,EAAA5R,MAAA,WAEZ,SAAAyS,GAAA1K,GACA,GAAAA,EAGA,OAAA5E,MAAAC,QAAA2E,GACAA,EAAA6H,IAAA4C,IAEA,CAAAA,GAAAzK,IAGA,IAAA2K,GAAA,WACA,SAAAA,EAAAjV,GACAF,KAAAE,UAgBA,OAdAiV,EAAAzU,UAAA0U,aAAA,SAAApE,EAAAzL,EAAA0O,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAAmD,QAAApD,EAAA1B,WAAA6C,EAAA7N,MACStD,KAAA,SAAAmS,GACT,GAAAA,EAGA,OACA9Q,MAAAkQ,GAAAY,EAAA9Q,OACAkH,SAAA0K,GAAAd,EAAA5J,cAIA2K,EAlBA,GAsBA,SAAAG,GAAAhR,GACA,OAAAA,GACA,KAAasC,EAAwB+D,KAAA,OAAAzJ,OAAAyS,UAAA/M,sBAAA+D,KACrC,KAAa/D,EAAwBgE,MAAA,OAAA1J,OAAAyS,UAAA/M,sBAAAgE,MACrC,KAAahE,EAAwB+B,KAAA,OAAAzH,OAAAyS,UAAA/M,sBAAA+B,KAErC,OAAAzH,OAAAyS,UAAA/M,sBAAA+B,KAEA,IAAA4M,GAAA,WACA,SAAAA,EAAArV,GACAF,KAAAE,UAkBA,OAhBAqV,EAAA7U,UAAA8U,0BAAA,SAAAxE,EAAAzL,EAAA0O,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAAuD,uBAAAxD,EAAA1B,WAAA6C,EAAA7N,MACStD,KAAA,SAAAyT,GACT,GAAAA,EAGA,OAAAA,EAAArD,IAAA,SAAAgC,GACA,OACA/Q,MAAAkQ,GAAAa,EAAA/Q,OACAgB,KAAAgR,GAAAjB,EAAA/P,YAKAiR,EApBA,GAwBA,SAAAI,GAAAnR,GACA,OACAnB,IAAAsN,EAAAiF,MAAApR,EAAAnB,KACAC,MAAAkQ,GAAAhP,EAAAlB,QAGA,IAAAuS,GAAA,WACA,SAAAA,EAAA3V,GACAF,KAAAE,UAaA,OAXA2V,EAAAnV,UAAAoV,kBAAA,SAAA9E,EAAAzL,EAAA0O,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAA6D,eAAA9D,EAAA1B,WAAA6C,EAAA7N,MACStD,KAAA,SAAA+T,GACT,GAAAA,EAGA,OAAAL,GAAAK,OAGAH,EAfA,GAmBAI,GAAA,WACA,SAAAA,EAAA/V,GACAF,KAAAE,UAaA,OAXA+V,EAAAvV,UAAAwV,kBAAA,SAAAlF,EAAAzL,EAAAyO,EAAAC,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAAiE,eAAAlE,EAAA1B,WAAA6C,EAAA7N,MACStD,KAAA,SAAAyT,GACT,GAAAA,EAGA,OAAAA,EAAArD,IAAAsD,OAGAM,EAfA,GAmBA,SAAAG,GAAAhP,GACA,GAAAA,KAAAtB,QAAA,CAGA,IAAAuQ,EAAA,GACA,QAAAhT,KAAA+D,EAAAtB,QAAA,CAEA,IADA,IAAAJ,EAAA,GACA5D,EAAA,EAAAwU,EAAAlP,EAAAtB,QAAAzC,GAAgDvB,EAAAwU,EAAAtU,OAAgBF,IAAA,CAChE,IAAAoM,EAAAoI,EAAAxU,GACA4D,EAAAuB,KAAA,CACA3D,MAAAkQ,GAAAtF,EAAA5K,OACAkF,KAAA0F,EAAA7I,UAGAgR,EAAApP,KAAA,CAA4BgL,SAAAtB,EAAAiF,MAAAvS,GAAAqC,UAE5B,OACAA,MAAA2Q,IAGA,IAAAE,GAAA,WACA,SAAAA,EAAArW,GACAF,KAAAE,UAUA,OARAqW,EAAA7V,UAAA8V,mBAAA,SAAAxF,EAAAzL,EAAAkR,EAAAxC,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GACA,OAAAA,EAAAwE,SAAAzE,EAAA1B,WAAA6C,EAAA7N,GAAAkR,KACSxU,KAAA,SAAAmF,GACT,OAAAgP,GAAAhP,MAGAmP,EAZA,GAgBA,SAAAI,GAAArS,GACA,IAAAsS,EAAA1V,OAAAyS,UAAA7M,WACA,OAAAxC,GACA,KAAawC,EAAa4C,KAAA,OAAAkN,EAAAhR,MAC1B,KAAakB,EAAaqC,OAAA,OAAAyN,EAAAzN,OAC1B,KAAarC,EAAa+D,UAAA,OAAA+L,EAAA/L,UAC1B,KAAa/D,EAAagE,QAAA,OAAA8L,EAAA9L,QAC1B,KAAahE,EAAamC,MAAA,OAAA2N,EAAA3N,MAC1B,KAAanC,EAAa8B,OAAA,OAAAgO,EAAAhO,OAC1B,KAAa9B,EAAasC,SAAA,OAAAwN,EAAAxN,SAC1B,KAAatC,EAAaiC,MAAA,OAAA6N,EAAA7N,MAC1B,KAAajC,EAAagC,YAAA,OAAA8N,EAAA9N,YAC1B,KAAahC,EAAayC,KAAA,OAAAqN,EAAArN,KAC1B,KAAazC,EAAaoC,UAAA,OAAA0N,EAAA1N,UAC1B,KAAapC,EAAa+B,SAAA,OAAA+N,EAAA/N,SAC1B,KAAa/B,EAAakC,SAAA,OAAA4N,EAAA5N,SAC1B,KAAalC,EAAagD,SAAA,OAAA8M,EAAA9M,SAC1B,KAAahD,EAAaiE,OAAA,OAAA6L,EAAA7L,OAC1B,KAAajE,EAAakE,OAAA,OAAA4L,EAAA5L,OAC1B,KAAalE,EAAamE,QAAA,OAAA2L,EAAA3L,QAC1B,KAAanE,EAAalB,MAAA,OAAAgR,EAAAhR,MAE1B,OAAAgR,EAAA/N,SAEA,IAAAgO,GAAA,WACA,SAAAA,EAAA3W,GACAF,KAAAE,UAkBA,OAhBA2W,EAAAnW,UAAAoW,uBAAA,SAAA9F,EAAAiD,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GAA8D,OAAAA,EAAA6E,oBAAA9E,EAAA1B,cAA0DtO,KAAA,SAAAkI,GACxH,GAAAA,EAGA,OAAAA,EAAAkI,IAAA,SAAAiC,GAA8C,OAC9ClJ,KAAAkJ,EAAAlJ,KACAQ,OAAA,GACAP,cAAAiJ,EAAAjJ,cACA/G,KAAAqS,GAAArC,EAAAhQ,MACAhB,MAAAkQ,GAAAc,EAAA9P,SAAAlB,OACAuI,eAAA2H,GAAAc,EAAA9P,SAAAlB,aAIAuT,EApBA,GAuBAG,GAAA,WACA,SAAAA,EAAA9W,GACAF,KAAAE,UAkCA,OAhCA8W,EAAAtW,UAAAuW,sBAAA,SAAAjG,EAAAiD,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GAA8D,OAAAA,EAAAgF,mBAAAjF,EAAA1B,cAAyDtO,KAAA,SAAAkV,GACvH,GAAAA,EAGA,OAAAA,EAAA9E,IAAA,SAAAiC,GAA8C,OAC9CxQ,MAAAwQ,EAAAxQ,MACAR,MAAAkQ,GAAAc,EAAAhR,aAIA0T,EAAAtW,UAAA0W,0BAAA,SAAApG,EAAAoD,EAAAH,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GAA8D,OAAAA,EAAAmF,sBAAApF,EAAA1B,WAAA6D,EAAAtQ,MAAAyP,GAAAa,EAAA9Q,UAA+FrB,KAAA,SAAAqV,GAC7J,GAAAA,EAGA,OAAAA,EAAAjF,IAAA,SAAAkF,GACA,IAAAjD,EAAA,CACAhT,MAAAiW,EAAAjW,OAQA,OANAiW,EAAAxT,WACAuQ,EAAAvQ,SAAA6P,GAAA2D,EAAAxT,WAEAwT,EAAAvT,sBACAsQ,EAAAtQ,oBAAAuT,EAAAvT,oBAAAqO,IAAAuB,KAEAU,OAIA0C,EApCA,GAuCAQ,GAAA,WACA,SAAAA,EAAAtX,GACAF,KAAAE,UAoBA,OAlBAsX,EAAA9W,UAAA+W,qBAAA,SAAAzG,EAAAgD,EAAAC,GACA,IAAAhC,EAAAjB,EAAA3N,IACA,OAAArD,KAAAE,QAAA+R,GAAAhQ,KAAA,SAAAiQ,GAA8D,OAAAA,EAAAuF,qBAAAxF,EAAA1B,WAAAyD,KAAoE/R,KAAA,SAAAyV,GAClI,GAAAA,EAGA,OAAAA,EAAArF,IAAA,SAAA/O,GACA,IAAAiB,EAAA,CACArB,MAAAI,EAAAY,UAAA,EACAf,IAAAG,EAAAa,QAAA,GAKA,MAHA,qBAAAb,EAAAgB,OACAC,EAAAD,KAAAqT,GAAArU,EAAAgB,OAEAC,OAIAiT,EAtBA,GAyBA,SAAAG,GAAArT,GACA,OAAAA,GACA,KAAanF,EAAmByY,QAAA,OAAA1W,OAAAyS,UAAAxU,iBAAAyY,QAChC,KAAazY,EAAmB0Y,QAAA,OAAA3W,OAAAyS,UAAAxU,iBAAA0Y,QAChC,KAAa1Y,EAAmB2Y,OAAA,OAAA5W,OAAAyS,UAAAxU,iBAAA2Y,QC9dzB,SAAAC,GAAAjY,GACP,IAAAoC,EAAA,IAAqBrC,EAAaC,GAClCoS,EAAA,SAAA8F,GAEA,IADA,IAAAC,EAAA,GACAnW,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CmW,EAAAnW,EAAA,GAAAC,UAAAD,GAEA,OAAAI,EAAAN,yBAAAsW,MAAAhW,EAAA,CAAA8V,GAAAG,OAAAF,KAEA1W,EAAAzB,EAAAyB,WACAL,OAAAyS,UAAAyE,+BAAA7W,EAAA,IAAoEsS,GAAkC3B,IACtGhR,OAAAyS,UAAA0E,sBAAA9W,EAAA,IAA2D4T,GAA6BjD,IACxFhR,OAAAyS,UAAA2E,kCAAA/W,EAAA,IAAuEgU,GAAyCrD,IAChHhR,OAAAyS,UAAA4E,2BAAAhX,EAAA,IAAgEsU,GAAkC3D,IAClGhR,OAAAyS,UAAA6E,0BAAAjX,EAAA,IAA+D0U,GAAiC/D,IAChGhR,OAAAyS,UAAA8E,+BAAAlX,EAAA,IAAoEsV,GAAsC3E,IAC1GhR,OAAAyS,UAAA+E,uBAAAnX,EAAA,IAA4DgV,GAA8BrE,IAC1FhR,OAAAyS,UAAAgF,sBAAApX,EAAA,IAA2DyV,GAAqC9E,IAChGhR,OAAAyS,UAAAiF,6BAAArX,EAAA,IAAkEiW,GAAoCtF,IACtG,IAAQtB,EAAmCrP,EAAA2Q,EAAApS,GA1B3C+Y,EAAA7G,EAAA8G,EAAA,8BAAAf","file":"js/chunk-2d228ca6.741b4c1c.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `CSSWorker` instance\r\n                moduleId: 'vs/language/css/cssWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Uri = monaco.Uri;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n        }));\r\n        defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        });\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString());\r\n        }).then(function (diagnostics) {\r\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n            var model = monaco.editor.getModel(resource);\r\n            if (model.getModeId() === languageId) {\r\n                monaco.editor.setModelMarkers(model, languageId, markers);\r\n            }\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return [' ', ':'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n    if (!contents) {\r\n        return void 0;\r\n    }\r\n    if (Array.isArray(contents)) {\r\n        return contents.map(toMarkdownString);\r\n    }\r\n    return [toMarkdownString(contents)];\r\n}\r\n// --- hover ------\r\nvar HoverAdapter = /** @class */ (function () {\r\n    function HoverAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doHover(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            return {\r\n                range: toRange(info.range),\r\n                contents: toMarkedStringArray(info.contents)\r\n            };\r\n        });\r\n    };\r\n    return HoverAdapter;\r\n}());\r\nexport { HoverAdapter };\r\n// --- document highlights ------\r\nfunction toDocumentHighlightKind(kind) {\r\n    switch (kind) {\r\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\r\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\r\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\r\n    }\r\n    return monaco.languages.DocumentHighlightKind.Text;\r\n}\r\nvar DocumentHighlightAdapter = /** @class */ (function () {\r\n    function DocumentHighlightAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(function (entry) {\r\n                return {\r\n                    range: toRange(entry.range),\r\n                    kind: toDocumentHighlightKind(entry.kind)\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return DocumentHighlightAdapter;\r\n}());\r\nexport { DocumentHighlightAdapter };\r\n// --- definition ------\r\nfunction toLocation(location) {\r\n    return {\r\n        uri: Uri.parse(location.uri),\r\n        range: toRange(location.range)\r\n    };\r\n}\r\nvar DefinitionAdapter = /** @class */ (function () {\r\n    function DefinitionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findDefinition(resource.toString(), fromPosition(position));\r\n        }).then(function (definition) {\r\n            if (!definition) {\r\n                return;\r\n            }\r\n            return [toLocation(definition)];\r\n        });\r\n    };\r\n    return DefinitionAdapter;\r\n}());\r\nexport { DefinitionAdapter };\r\n// --- references ------\r\nvar ReferenceAdapter = /** @class */ (function () {\r\n    function ReferenceAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.findReferences(resource.toString(), fromPosition(position));\r\n        }).then(function (entries) {\r\n            if (!entries) {\r\n                return;\r\n            }\r\n            return entries.map(toLocation);\r\n        });\r\n    };\r\n    return ReferenceAdapter;\r\n}());\r\nexport { ReferenceAdapter };\r\n// --- rename ------\r\nfunction toWorkspaceEdit(edit) {\r\n    if (!edit || !edit.changes) {\r\n        return void 0;\r\n    }\r\n    var resourceEdits = [];\r\n    for (var uri in edit.changes) {\r\n        var edits = [];\r\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            edits.push({\r\n                range: toRange(e.range),\r\n                text: e.newText\r\n            });\r\n        }\r\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\r\n    }\r\n    return {\r\n        edits: resourceEdits\r\n    };\r\n}\r\nvar RenameAdapter = /** @class */ (function () {\r\n    function RenameAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\r\n        }).then(function (edit) {\r\n            return toWorkspaceEdit(edit);\r\n        });\r\n    };\r\n    return RenameAdapter;\r\n}());\r\nexport { RenameAdapter };\r\n// --- document symbols ------\r\nfunction toSymbolKind(kind) {\r\n    var mKind = monaco.languages.SymbolKind;\r\n    switch (kind) {\r\n        case ls.SymbolKind.File: return mKind.Array;\r\n        case ls.SymbolKind.Module: return mKind.Module;\r\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\r\n        case ls.SymbolKind.Package: return mKind.Package;\r\n        case ls.SymbolKind.Class: return mKind.Class;\r\n        case ls.SymbolKind.Method: return mKind.Method;\r\n        case ls.SymbolKind.Property: return mKind.Property;\r\n        case ls.SymbolKind.Field: return mKind.Field;\r\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\r\n        case ls.SymbolKind.Enum: return mKind.Enum;\r\n        case ls.SymbolKind.Interface: return mKind.Interface;\r\n        case ls.SymbolKind.Function: return mKind.Function;\r\n        case ls.SymbolKind.Variable: return mKind.Variable;\r\n        case ls.SymbolKind.Constant: return mKind.Constant;\r\n        case ls.SymbolKind.String: return mKind.String;\r\n        case ls.SymbolKind.Number: return mKind.Number;\r\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\r\n        case ls.SymbolKind.Array: return mKind.Array;\r\n    }\r\n    return mKind.Function;\r\n}\r\nvar DocumentSymbolAdapter = /** @class */ (function () {\r\n    function DocumentSymbolAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                name: item.name,\r\n                detail: '',\r\n                containerName: item.containerName,\r\n                kind: toSymbolKind(item.kind),\r\n                range: toRange(item.location.range),\r\n                selectionRange: toRange(item.location.range)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentSymbolAdapter;\r\n}());\r\nexport { DocumentSymbolAdapter };\r\nvar DocumentColorAdapter = /** @class */ (function () {\r\n    function DocumentColorAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\r\n            if (!infos) {\r\n                return;\r\n            }\r\n            return infos.map(function (item) { return ({\r\n                color: item.color,\r\n                range: toRange(item.range)\r\n            }); });\r\n        });\r\n    };\r\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\r\n            if (!presentations) {\r\n                return;\r\n            }\r\n            return presentations.map(function (presentation) {\r\n                var item = {\r\n                    label: presentation.label,\r\n                };\r\n                if (presentation.textEdit) {\r\n                    item.textEdit = toTextEdit(presentation.textEdit);\r\n                }\r\n                if (presentation.additionalTextEdits) {\r\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    return DocumentColorAdapter;\r\n}());\r\nexport { DocumentColorAdapter };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nexport function setupMode(defaults) {\r\n    var client = new WorkerManager(defaults);\r\n    var worker = function (first) {\r\n        var more = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            more[_i - 1] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\r\n    };\r\n    var languageId = defaults.languageId;\r\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\r\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\r\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\r\n    monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\r\n    monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\r\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\r\n    monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\r\n    monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\r\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\r\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\r\n}\r\n"],"sourceRoot":""}