{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","file":"js/chunk-2d0bff92.5eac84e3.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\r\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.scss',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@selector' },\r\n        ],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@variabledeclaration' },\r\n            { include: '@warndebug' },\r\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\r\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\r\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@controlstatement' },\r\n            { include: '@selectorname' },\r\n            ['[&\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n        ],\r\n        selectorbody: [\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            { include: '@selector' },\r\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\r\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        selectorname: [\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@variablereference' },\r\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\r\n            [',', 'delimiter'],\r\n            ['!default', 'literal'],\r\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\r\n        ],\r\n        rulevalue: [\r\n            { include: '@term' },\r\n            ['!important', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        nestedproperty: [\r\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\r\n            { include: '@comments' },\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        warndebug: [\r\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\r\n        ],\r\n        import: [\r\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\r\n        ],\r\n        variabledeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        extendbody: [\r\n            { include: '@selectorname' },\r\n            ['!optional', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        variablereference: [\r\n            ['\\\\$@identifier', 'variable.ref'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n        ],\r\n        variableinterpolation: [\r\n            { include: '@variablereference' },\r\n            ['}', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment'],\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment'],\r\n        ],\r\n        name: [\r\n            ['@identifier', 'attribute.value'],\r\n        ],\r\n        numbers: [\r\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\r\n        ],\r\n        units: [\r\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\r\n        ],\r\n        functiondeclaration: [\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\r\n        ],\r\n        mixindeclaration: [\r\n            // mixin with parameters\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            // mixin without parameters\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        parameterdeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            [',', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        includedeclaration: [\r\n            { include: '@functioninvocation' },\r\n            ['@identifier', 'meta'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        controlstatement: [\r\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\r\n        ],\r\n        controlstatementdeclaration: [\r\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        functionbody: [\r\n            ['[@](return)', { token: 'keyword' }],\r\n            { include: '@variabledeclaration' },\r\n            { include: '@term' },\r\n            { include: '@controlstatement' },\r\n            [';', 'delimiter'],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        functioninvocation: [\r\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\r\n        ],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\r\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}