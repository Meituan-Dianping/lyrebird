{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","$2@tags","@eos","@default","next","$2@keywords","include","@keywords","tag","simpleText","attributeList","whitespace","blockText","($S2\\s+.*$)","comment","string","$#==$S2","value"],"mappings":"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","file":"js/chunk-2d0b2762.7faa5aa3.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//'\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pug',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\r\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\r\n    tags: [\r\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\r\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\r\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\r\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\r\n        'em', 'embed',\r\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\r\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n        'i', 'iframe', 'img', 'input', 'ins',\r\n        'keygen', 'kbd',\r\n        'label', 'li', 'link',\r\n        'map', 'mark', 'menu', 'meta', 'meter',\r\n        'nav', 'noframes', 'noscript',\r\n        'object', 'ol', 'optgroup', 'option', 'output',\r\n        'p', 'param', 'pre', 'progress',\r\n        'q',\r\n        'rp', 'rt', 'ruby',\r\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\r\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\r\n        'u', 'ul',\r\n        'video',\r\n        'wbr'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            // Tag or a keyword at start\r\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\r\n                {\r\n                    cases: {\r\n                        '$2@tags': {\r\n                            cases: {\r\n                                '@eos': ['', 'tag'],\r\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\r\n                            }\r\n                        },\r\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\r\n                        '@default': ['', '',]\r\n                    }\r\n                }\r\n            ],\r\n            // id\r\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.id'],\r\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // class\r\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.class'],\r\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // plain text with pipe\r\n            [/^(\\s*)(\\|.*)$/, ''],\r\n            { include: '@whitespace' },\r\n            // keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        tag: [\r\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\r\n            [/\\s+/, { token: '', next: '@simpleText' }],\r\n            // id\r\n            [/#[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.id', next: '@pop' },\r\n                        '@default': 'tag.id'\r\n                    }\r\n                }],\r\n            // class\r\n            [/\\.[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.class', next: '@pop' },\r\n                        '@default': 'tag.class'\r\n                    }\r\n                }],\r\n            // attributes\r\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\r\n        ],\r\n        simpleText: [\r\n            [/[^#]+$/, { token: '', next: '@popall' }],\r\n            [/[^#]+/, { token: '' }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, {\r\n                    cases: {\r\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\r\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\r\n                    }\r\n                }],\r\n            [/#$/, { token: '', next: '@popall' }],\r\n            [/#/, '']\r\n        ],\r\n        attributeList: [\r\n            [/\\s+/, ''],\r\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\r\n            [/\\w+/, 'attribute.name'],\r\n            [/,/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\r\n                        '@default': 'attribute.delimiter'\r\n                    }\r\n                }],\r\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\r\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        whitespace: [\r\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/<!--/, { token: 'comment', next: '@comment' }],\r\n        ],\r\n        blockText: [\r\n            [/^\\s+.*$/, {\r\n                    cases: {\r\n                        '($S2\\\\s+.*$)': { token: '$S3' },\r\n                        '@default': { token: '@rematch', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/./, { token: '@rematch', next: '@popall' }]\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, { token: 'comment', next: '@pop' }],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"'#]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\r\n            [/#/, 'string'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': { token: 'string' }\r\n                    }\r\n                }],\r\n        ],\r\n        // Almost identical to above, except for escapes and the output token\r\n        value: [\r\n            [/[^\\\\\"']+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\r\n                        '@default': { token: 'attribute.value' }\r\n                    }\r\n                }],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":""}